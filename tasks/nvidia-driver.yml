---

- name: include driver type specific vars
  ansible.builtin.include_vars: '{{ nvidia_driver_type | lower }}.yml'

- name: blacklist nouveau kernel module
  community.general.kernel_blacklist:
    name: 'nouveau'

- name: unload nouveau kernel module
  community.general.modprobe:
    name: 'nouveau'
    state: absent

- name: check installed nvidia driver version
  ansible.builtin.shell: |
    set -o pipefail
    nvidia-modprobe --version |
      grep -oP 'version \K[[:digit:]\.]+'
  register: __nvidia_driver_installed_version
  check_mode: no
  changed_when:
    - __nvidia_driver_installed_version.stdout != nvidia_driver_version
  failed_when: no

- name: check if nvidiactl device exists
  ansible.builtin.stat:
    path: '/dev/nvidiactl'
  check_mode: no
  register: __nvidia_driver_nvidiactl
  changed_when:
    - not __nvidia_driver_nvidiactl.stat.exists
  failed_when: no

- name: check if nvidia driver kernel module exists for current kernel
  ansible.builtin.stat:
    path: '/lib/modules/{{ ansible_kernel }}/kernel/drivers/video/nvidia.ko'
  check_mode: no
  register: __nvidia_driver_kernel_module
  changed_when:
    - not __nvidia_driver_kernel_module.stat.exists
  failed_when: no

- name: include actual installation
  ansible.builtin.include_tasks: install.yml
  when:
    - >-
      __nvidia_driver_installed_version.changed or
      __nvidia_driver_nvidiactl.changed or
      __nvidia_driver_kernel_module.changed

- name: load nvidia kernel module
  community.general.modprobe:
    name: 'nvidia'
    params: 'NVreg_EnableMSI=0'

- name: load nvidia unified virtual memory kernel module
  community.general.modprobe:
    name: 'nvidia_uvm'

- name: create nvidia devices
  ansible.builtin.script: 'nvidia-dev-create.sh'
  args:
    creates: /dev/nvidiactl

- name: check persistence mode
  ansible.builtin.command: >-
    nvidia-smi --query-gpu=persistence_mode --format=csv,noheader
  register: __nvidia_driver_persistence_mode
  check_mode: no
  changed_when: no

- name: keep nvidia devices ready-to-use
  ansible.builtin.command: nvidia-smi --persistence-mode=ENABLED
  when:
    - __nvidia_driver_persistence_mode.stdout.find('Enabled') == -1
  register: __nvidia_driver_enable_persistence_mode
  changed_when:
    - __nvidia_driver_enable_persistence_mode.rc == 0
  failed_when:
    - __nvidia_driver_enable_persistence_mode.rc != 0

...

---

- name: blacklist nouveau kernel module
  kernel_blacklist:
    name: 'nouveau'

- name: unload nouveau kernel module
  modprobe:
    name: 'nouveau'
    state: absent

- name: check if nvidia driver is installed
  shell: >
    nvidia-modprobe --version |
    grep -oP 'version \K[[:digit:]]+\.[[:digit:]]+'
  register: nvidia_driver_installed_version
  check_mode: no
  changed_when: >-
    nvidia_driver_installed_version.stdout != nvidia_driver_version
  failed_when: no

- name: check if nvidiactl device exists
  stat:
    path: '/dev/nvidiactl'
  register: nvidia_driver_nvidiactl
  check_mode: no
  changed_when: >-
    not nvidia_driver_nvidiactl.stat.exists
  failed_when: no

- name: check if nvidia driver kernel module exists for current kernel
  stat:
    path: '/lib/modules/{{ ansible_kernel }}/kernel/drivers/video/nvidia.ko'
  register: nvidia_driver_kernel_module
  check_mode: no
  changed_when: >-
    not nvidia_driver_kernel_module.stat.exists
  failed_when: no

- include_tasks: install.yml
  when: >
    nvidia_driver_installed_version.changed or
    nvidia_driver_nvidiactl.changed or
    nvidia_driver_kernel_module.changed

- name: load nvidia kernel module
  modprobe:
    name: 'nvidia'
    params: 'NVreg_EnableMSI=0'
  register: nvidia_driver_module_loaded

- name: load nvidia unified virtual memory kernel module
  modprobe:
    name: 'nvidia_uvm'

- name: create nvidia devices
  script: 'nvidia-dev-create.sh'
  args:
    creates: /dev/nvidiactl

- name: check persistence mode
  command: 'nvidia-smi --query-gpu=persistence_mode --format=csv,noheader'
  register: persistence_mode
  check_mode: no
  changed_when: no

- name: keep nvidia devices ready-to-use
  command: nvidia-smi --persistence-mode=ENABLED
  when: persistence_mode.stdout.find('Enabled') == -1

...
